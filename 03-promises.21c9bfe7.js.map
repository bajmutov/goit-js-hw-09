{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAzCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAIV,GAHAC,QAAQC,IAAIL,EAAMM,MAAOL,EAAKK,MAAOJ,EAAOI,OAGxCN,EAAMM,MAAQ,GAAKJ,EAAOI,MAAQ,GAAKL,EAAKK,MAAQ,EAE5C,YADPxB,EAAAyB,OAAOC,QAAQ,gCAIpB,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOI,MAAOG,GAAK,EACtCzB,EAAcyB,EAAGT,EAAMM,OACpBI,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOI,QAAQ,uBAAqB1B,QAAiBC,OACnDkB,QAAMC,IAAI,uBAAqBpB,QAAiBC,MAAU,IAE7D0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAyB,OAAOC,QAAQ,sBAAoBvB,QAAeC,MAAU,IAEhEc,EAAMM,MAAQO,OAAOb,EAAMM,OAASO,OAAOZ,EAAKK,OAGlDT,EAAMM,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  console.log(delay.value, step.value, amount.value);\n\n  \n  if (delay.value < 0 || amount.value < 0 || step.value < 0) {\n       Notify.failure(`❌❌ Incorrect input values.❌❌`);\n      return;\n  }\n  \n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delay.value)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay.value = Number(delay.value) + Number(step.value);\n  }\n  \n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","console","log","value","Notify","failure","i","then","success","catch","Number","reset"],"version":3,"file":"03-promises.21c9bfe7.js.map"}